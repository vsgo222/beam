akka {
    actor {
        debug {
            fsm=off
            lifecycle=on
            unhandled=on
        }
        kryo {
            buffer-size=65536
            classes=[
                "package3.name3.className3",
                "package4.name4.className4"
            ]
            idstrategy=default
            implicit-registration-logging=false
            kryo-trace=false
            mappings {
                "package1.name1.className1"=20
                "package2.name2.className2"=21
            }
            max-buffer-size=-1
            post-serialization-transformations=off
            resolve-subclasses=false
            type=graph
            use-manifests=false
            use-unsafe=false
        }
        serialization-bindings {
            "java.io.Serializable"=kryo
        }
        serializers {
            kryo="com.romix.akka.serialization.kryo.KryoSerializer"
        }
    }
    cluster {
        debug {
            verbose-gossip-logging=on
            verbose-heartbeat-logging=on
        }
        failure-detector {
            acceptable-heartbeat-pause="140s"
            heartbeat-interval="1s"
        }
        gossip-interval="1s"
        gossip-time-to-live="20s"
    }
    extensions=[
        "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
    ]
    log-dead-letters=1
    loggers=[
        "akka.event.slf4j.Slf4jLogger"
    ]
    logging-filter="akka.event.slf4j.Slf4jLoggingFilter"
    loglevel=debug
    remote {
        artery {
            advanced {
                buffer-pool-size=128
                client-liveness-timeout="400 seconds"
                driver-timeout="400 seconds"
                large-buffer-pool-size=32
                maximum-frame-size="512MiB"
                maximum-large-frame-size="1024MiB"
            }
            enabled=on
            transport=tcp
        }
        log-received-messages=on
        log-remote-lifecycle-events=off
        log-sent-messages=on
    }
    stdout-loglevel=OFF
}
beam {
    actorSystemName=ClusterSystem
    agentsim {
        agentSampleSizeAsFractionOfPopulation=1
        agents {
            bodyType=BODY-TYPE-DEFAULT
            freight {
                carrierParkingFilePath=string
                carriersFilePath="/test/input/beamville/freight/freight-carriers.csv"
                enabled=false
                name=Freight
                plansFilePath="/test/input/beamville/freight/payload-plans.csv"
                replanning {
                    departureTime=28800
                    disableAfterIteration=-1
                    strategy=singleTour
                }
                toursFilePath="/test/input/beamville/freight/freight-tours.csv"
            }
            households {
                inputFilePath="/test/input/beamville/households.xml.gz"
                inputHouseholdAttributesFilePath="/test/input/beamville/householdAttributes.xml.gz"
            }
            modalBehaviors {
                defaultValueOfTime=8
                highTimeSensitivity {
                    highCongestion {
                        highwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                        nonHighwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                    }
                    lowCongestion {
                        highwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                        nonHighwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                    }
                }
                lccm {
                    filePath="/test/input/beamville/lccm-long.csv"
                }
                lowTimeSensitivity {
                    highCongestion {
                        highwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                        nonHighwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                    }
                    lowCongestion {
                        highwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                        nonHighwayFactor {
                            Level3=1.0
                            Level4=1.0
                            Level5=1.0
                            LevelLE2=1.0
                        }
                    }
                }
                maximumNumberOfReplanningAttempts=3
                minimumValueOfTime=7.25
                modeChoiceClass=ModeChoiceMultinomialLogit
                modeVotMultiplier {
                    CAV=1.0
                    bike=1.0
                    drive=1.0
                    rideHail=1.0
                    rideHailPooled=1.0
                    rideHailTransit=1.0
                    transit=1.0
                    waiting=1.0
                    walk=1.0
                }
                mulitnomialLogit {
                    params {
                        "bike_intercept"=2
                        "bike_transit_intercept"=0.0
                        "car_intercept"=2
                        "cav_intercept"=0.0
                        "drive_transit_intercept"=2
                        "ride_hail_intercept"=10
                        "ride_hail_pooled_intercept"=10
                        "ride_hail_transit_intercept"=0
                        transfer=-1.4
                        "transit_crowding"=0.0
                        "transit_crowding_percentile"=90.0
                        "walk_intercept"=0
                        "walk_transit_intercept"=0
                    }
                    "utility_scale_factor"=1.0
                }
                overrideAutomationForVOTT=false
                overrideAutomationLevel=5
                poolingMultiplier {
                    Level3=1.0
                    Level4=1.0
                    Level5=1.0
                    LevelLE2=1.0
                }
            }
            modeIncentive {
                filePath=""
            }
            parking {
                maxSearchRadius=8046.72
                minSearchRadius=250.0
                mulitnomialLogit {
                    params {
                        distanceMultiplier=-0.086
                        homeActivityPrefersResidentialParkingMultiplier=1.0
                        parkingPriceMultiplier=-0.005
                        rangeAnxietyMultiplier=-0.5
                    }
                }
                rangeAnxietyBuffer=20000.0
            }
            plans {
                inputPersonAttributesFilePath="/test/input/beamville/populationAttributes.xml.gz"
                inputPlansFilePath="/test/input/beamville/population.xml.gz"
                merge {
                    fraction=0.0
                }
            }
            population {
                useVehicleSampling=false
            }
            ptFare {
                filePath=""
            }
            rideHail {
                allocationManager {
                    alonsoMora {
                        maxRequestsPerVehicle=5
                    }
                    matchingAlgorithm="ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT"
                    maxExcessRideTime=0.5
                    maxWaitingTimeInSec=900
                    name="POOLING_ALONSO_MORA"
                    pooledRideHailIntervalAsMultipleOfSoloRideHail=1
                    repositionLowWaitingTimes {
                        allowIncreasingRadiusIfDemandInRadiusLow=true
                        demandWeight=4
                        distanceWeight=0.01
                        keepMaxTopNScores=5
                        minDemandPercentageInRadius=0.1
                        minScoreThresholdForRepositioning=1.0E-5
                        minimumNumberOfIdlingVehiclesThresholdForRepositioning=1
                        percentageOfVehiclesToReposition=1
                        produceDebugImages=true
                        repositionCircleRadiusInMeters=3000
                        repositioningMethod="TOP_SCORES"
                        timeWindowSizeInSecForDecidingAboutRepositioning=1200
                        waitingTimeWeight=4
                    }
                    requestBufferTimeoutInSeconds=200
                }
                cav {
                    noRefuelThresholdInMeters=96540
                    refuelRequiredThresholdInMeters=16090
                    valueOfTime=1
                }
                charging {
                    vehicleChargingManager {
                        defaultVehicleChargingManager {
                            fractionAvailableThresholdToFavorFasterCharging=1.01
                            mulitnomialLogit {
                                params {
                                    chargingTimeMultiplier=-0.01666667
                                    drivingTimeMultiplier=-0.01666667
                                    insufficientRangeMultiplier=-60.0
                                    queueingTimeMultiplier=-0.01666667
                                }
                            }
                            noChargingThresholdExpirationTimeInS=0
                        }
                        name=DefaultVehicleChargingManager
                    }
                }
                defaultBaseCost=1.8
                defaultCostPerMile=0.91
                defaultCostPerMinute=0.28
                human {
                    noRefuelThresholdInMeters=128720
                    refuelRequiredThresholdInMeters=32180
                    valueOfTime=22.9
                }
                initialization {
                    filePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/rhFleet-250-micro.csv"
                    initType=FILE
                    parking {
                        filePath=""
                    }
                    procedural {
                        fractionOfInitialVehicleFleet=0.1
                        initialLocation {
                            home {
                                radiusInMeters=10000.0
                            }
                            name=HOME
                        }
                        vehicleTypeId=Car
                        vehicleTypePrefix=RH
                    }
                }
                iterationStats {
                    timeBinSizeInSec=3600.0
                }
                linkFleetStateAcrossIterations=false
                name=GlobalRHM
                pooledBaseCost=1.89
                pooledCostPerMile=1.11
                pooledCostPerMinute=0.07
                pooledToRegularRideCostRatio=0.6
                rangeBufferForDispatchInMeters=10000
                refuelLocationType=AtTAZCenter
                refuelThresholdInMeters=5000.0
                repositioningManager {
                    demandFollowingRepositioningManager {
                        fractionOfClosestClustersToConsider=0.2
                        horizon=1200
                        numberOfClustersForDemand=30
                        sensitivityOfRepositioningToDemand=1
                        sensitivityOfRepositioningToDemandForCAVs=1.0
                    }
                    inverseSquareDistanceRepositioningFactor {
                        predictionHorizon=3600
                        sensitivityOfRepositioningToDemand=0.4
                        sensitivityOfRepositioningToDistance=0.9
                    }
                    name="DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
                    timeout=300
                }
                rideHailManager {
                    radiusInMeters=5000.0
                }
                surgePricing {
                    minimumSurgeLevel=0.1
                    numberOfCategories=6
                    priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
                    surgeLevelAdaptionStep=0.1
                }
            }
            rideHailTransit {
                modesToConsider=MASS
            }
            tripBehaviors {
                mulitnomialLogit {
                    "activity_file_path"=""
                    "additional_trip_utility"=0.0
                    "destination_nest_scale_factor"=1.0
                    "generate_secondary_activities"=false
                    "intercept_file_path"=""
                    "max_destination_choice_set_size"=20
                    "max_destination_distance_meters"=32000.0
                    "mode_nest_scale_factor"=1.0
                    "trip_nest_scale_factor"=1.0
                }
            }
            vehicles {
                downsamplingMethod="SECONDARY_VEHICLES_FIRST"
                dummySharedBike {
                    vehicleTypeId=sharedVehicle-sharedBike
                }
                dummySharedCar {
                    vehicleTypeId=sharedVehicle-sharedCar
                }
                fractionOfInitialVehicleFleet=1.0
                fractionOfPeopleWithBicycle=1.0
                fuelTypesFilePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/beamFuelTypes.csv"
                linkToGradePercentFilePath=""
                meanPrivateVehicleStartingSOC=1.0
                meanRidehailVehicleStartingSOC=1.0
                sharedFleets=[]
                transitVehicleTypesByRouteFile=""
                vehicleAdjustmentMethod=UNIFORM
                vehicleTypesFilePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/vehicleTypes_full_micro.csv"
                vehiclesFilePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/vehicles.csv"
            }
        }
        chargingNetworkManager {
            helics {
                bufferSize="1000"
                connectionEnabled=false
                coreInitString="--federates=1 --broker_address=tcp://127.0.0.1"
                coreType=zmq
                dataInStreamPoint="GridFed/PhysicalBounds"
                dataOutStreamPoint=PowerDemand
                federateName=CNMFederate
                intLogLevel=1
                timeDeltaProperty=1.0
            }
            timeStepInSeconds=300
        }
        endTime="30:00:00"
        firstIteration=0
        fractionOfPlansWithSingleActivity=0.0
        h3taz {
            lowerBoundResolution=6
            upperBoundResolution=9
        }
        lastIteration=1
        populationAdjustment="DEFAULT_ADJUSTMENT"
        scenarios {
            frequencyAdjustmentFile="/test/input/beamville/r5/FrequencyAdjustment.csv"
        }
        scheduleMonitorTask {
            initialDelay=1
            interval=30
        }
        schedulerParallelismWindow=30
        simulationName="csv_test"
        startTime="00:00:00"
        taz {
            filePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/taz-centers_converted.csv"
            parkingCostScalingFactor=1.0
            parkingFilePath=""
            parkingManager {
                displayPerformanceTimings=false
                level=TAZ
                method=DEFAULT
                parallel {
                    numberOfClusters=8
                }
            }
            parkingStallCountScalingFactor=1.0
        }
        thresholdForMakingParkingChoiceInMeters=100
        thresholdForWalkingInMeters=100
        timeBinSize=3600
        toll {
            filePath="/test/input/beamville/toll-prices.csv"
        }
        tuning {
            fuelCapacityInJoules=8.64E7
            rideHailPrice=1
            tollPrice=1
            transitCapacity=1
            transitPrice=1
        }
    }
    calibration {
        counts {
            averageCountsOverIterations=1
            countsScaleFactor=10.355
            inputCountsFile=""
            writeCountsInterval=0
        }
        google {
            travelTimes {
                enable=false
                iterationInterval=5
                minDistanceInMeters=5000.0
                numDataPointsOver24Hours=100
                offPeakEnabled=false
                queryDate="2020-10-14"
                tolls=true
            }
        }
        meanToCountsWeightRatio=0.5
        mode {
            benchmarkFilePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/benchmark.csv"
        }
        objectiveFunction=ModeChoiceObjectiveFunction
        roadNetwork {
            travelTimes {
                zoneBoundariesFilePath=""
                zoneODTravelTimesFilePath=""
            }
        }
        studyArea {
            enabled=false
            lat=0.0
            lon=0.0
            radius=0.0
        }
    }
    cluster {
        clusterType=""
        enabled=false
    }
    debug {
        actor {
            logDepth=12
        }
        agentTripScoresInterval=0
        clearRoutedOutstandingWorkEnabled=false
        debugActorTimerIntervalInSec=10
        debugEnabled=true
        memoryConsumptionDisplayTimeoutInSec=0
        messageLogging=false
        secondsToWaitToClearRoutedOutstandingWork=60
        stuckAgentDetection {
            checkIntervalMs=200
            checkMaxNumberOfMessagesEnabled=true
            defaultTimeoutMs=60000
            enabled=true
            overallSimulationTimeoutMs=100000
            thresholds=[
                {
                    actorTypeToMaxNumberOfMessages {
                        population=1
                        rideHailAgent=1
                        transitDriverAgent=1
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.InitializeTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=11
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.PersonAgent$ActivityEndTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=1
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.PersonAgent$ActivityStartTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=60
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.PersonAgent$PersonDepartureTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=20
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$AlightVehicleTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=20
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$BoardVehicleTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=80
                        rideHailAgent=400
                        transitDriverAgent=114
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndLegTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        population=80
                        rideHailAgent=400
                        transitDriverAgent=114
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartLegTrigger"
                },
                {
                    actorTypeToMaxNumberOfMessages {
                        transitDriverAgent=1
                    }
                    markAsStuckAfterMs=20000
                    triggerType="beam.agentsim.scheduler.BeamAgentScheduler$KillTrigger"
                }
            ]
        }
        triggerMeasurer {
            enabled=false
            writeStuckAgentDetectionConfig=true
        }
        vmInformation {
            createGCClassHistogram=false
        }
        writeModeChoiceAlternatives=false
        writeRealizedModeChoiceFile=false
    }
    exchange {
        output {
            activitySimSkimsEnabled=false
            geo {
                filePath=string
            }
        }
        scenario {
            convertWgs2Utm=true
            fileFormat=csv
            folder="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/data"
            modeMap=[
                "BIKE           -> bike",
                "DRIVEALONEFREE -> car",
                "DRIVEALONEPAY  -> car",
                "DRIVE_COM      -> drive_transit",
                "DRIVE_EXP      -> drive_transit",
                "DRIVE_HVY      -> drive_transit",
                "DRIVE_LOC      -> drive_transit",
                "DRIVE_LRF      -> drive_transit",
                "SHARED2FREE    -> car",
                "SHARED2PAY     -> car",
                "SHARED3FREE    -> car",
                "SHARED3PAY     -> car",
                "TAXI           -> ride_hail",
                "TNC_SHARED     -> ride_hail",
                "TNC_SINGLE     -> ride_hail",
                "WALK           -> walk",
                "WALK_COM       -> walk_transit",
                "WALK_EXP       -> walk_transit",
                "WALK_HVY       -> walk_transit",
                "WALK_LOC       -> walk_transit",
                "WALK_LRF       -> walk_transit"
            ]
            source="urbansim_v2"
            urbansim {
                activitySimEnabled=false
            }
        }
    }
    experimental {
        optimizer {
            enabled=false
        }
    }
    input {
        lastBaseOutputDir=output
        simulationPrefix=beamville
    }
    inputDirectory="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test"
    logger {
        keepConsoleAppenderOn=true
    }
    metrics {
        level=off
    }
    outputs {
        addTimestampToOutputDirectory=true
        baseOutputDirectory="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/../../output/slc_5"
        collectAndCreateBeamAnalysisAndGraphs=true
        defaultWriteInterval=1
        displayPerformanceTimings=false
        events {
            eventsToWrite="PersonDepartureEvent,PersonArrivalEvent,ActivityEndEvent,ActivityStartEvent,PersonEntersVehicleEvent,PersonLeavesVehicleEvent,ModeChoiceEvent,PathTraversalEvent,ReserveRideHailEvent,ReplanningEvent,RefuelSessionEvent,ChargingPlugInEvent,ChargingPlugOutEvent,ParkingEvent,LeavingParkingEvent"
            fileOutputFormats="csv.gz,xml.gz"
        }
        generalizedLinkStats {
            endTime=32400
            startTime=25200
        }
        generalizedLinkStatsInterval=0
        matsim {
            deleteITERSFolderFiles=""
            deleteRootFolderFiles=""
        }
        stats {
            binSize=3600
        }
        writeAnalysis=false
        writeEventsInterval=1
        writeGraphs=true
        writeLinkTraversalInterval=0
        writePlansInterval=1
        writeR5RoutesInterval=0
    }
    physsim {
        bprsim {
            inFlowAggregationTimeWindowInSeconds=900
            minFlowToUseBPRFunction=0
            travelTimeFunction=BPR
        }
        cchRoutingAssignment {
            congestionFactor=1.0
        }
        duplicatePTE {
            departureTimeShiftMax=600
            departureTimeShiftMin=-600
            fractionOfEventsToDuplicate=0.0
        }
        eventManager {
            numberOfThreads=1
            type=Auto
        }
        events {
            eventsToWrite="ActivityEndEvent,ActivityStartEvent,LinkEnterEvent,LinkLeaveEvent,PersonArrivalEvent,PersonDepartureEvent,VehicleEntersTrafficEvent,VehicleLeavesTrafficEvent"
            fileOutputFormats="xml.gz"
        }
        eventsForFullVersionOfVia=true
        eventsSampling=1
        flowCapacityFactor=1
        initializeRouterWithFreeFlowTimes=true
        inputNetworkFilePath="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/r5/physsim-network.xml"
        jdeqsim {
            agentSimPhysSimInterfaceDebugger {
                enabled=false
            }
            cacc {
                adjustedMinimumRoadSpeedInMetersPerSecond=1.3
                capacityPlansWriteInterval=0
                enabled=false
                minRoadCapacity=1999
                minSpeedMetersPerSec=7
                speedAdjustmentFactor=1
            }
        }
        linkStatsBinSize=3600
        linkStatsWriteInterval=0
        name=JDEQSim
        network {
            maxSpeedInference {
                enabled=false
                type=MEAN
            }
            overwriteRoadTypeProperties {
                enabled=false
            }
        }
        overwriteLinkParamPath=""
        parbprsim {
            numberOfClusters=8
            syncInterval=60
        }
        pickUpDropOffAnalysis {
            additionalTravelTimeMultiplier=1.0
            enabled=false
            secondsFromPickUpPropOffToAffectTravelTime=600
        }
        ptSampleSize=1
        "quick_fix_minCarSpeedInMetersPerSecond"=0
        relaxation {
            "experiment2_0" {
                clearModesEveryIteration=true
                clearRoutesEveryIteration=true
                fractionOfPopulationToReroute=0.1
                internalNumberOfIterations=15
            }
            "experiment2_1" {
                clearModesEveryIteration=true
                clearRoutesEveryIteration=true
                fractionOfPopulationToReroute=0.1
                internalNumberOfIterations=15
            }
            "experiment3_0" {
                fractionOfPopulationToReroute=0.1
                internalNumberOfIterations=15
            }
            type=normal
        }
        skipPhysSim=false
        speedScalingFactor=1.0
        storageCapacityFactor=1
        writeEventsInterval=1
        writeMATSimNetwork=false
        writePlansInterval=1
        writeRouteHistoryInterval=10
    }
    replanning {
        "ModuleProbability_1"=0.7
        "ModuleProbability_2"=0.1
        "ModuleProbability_3"=0.1
        "ModuleProbability_4"=0.1
        "Module_1"=SelectExpBeta
        "Module_2"=ClearRoutes
        "Module_3"=ClearModes
        "Module_4"=TimeMutator
        cleanNonCarModesInIteration=1
        clearModes {
            iteration=0
            modes=[
                string
            ]
            strategy=AtBeginningOfIteration
        }
        fractionOfIterationsToDisableInnovation=9999999
        maxAgentPlanMemorySize=4
    }
    router {
        skim {
            activity-sim-skimmer {
                fileBaseName=activitySimODSkims
                name=activity-sim-skimmer
            }
            collectFullCarSkimsInterval=1
            drive-time-skimmer {
                fileBaseName=skimsTravelTimeObservedVsSimulated
                name=drive-time-skimmer
            }
            h3Resolution=6
            keepKLatestSkims=1
            origin-destination-skimmer {
                fileBaseName=skimsOD
                name=od-skimmer
                poolingTravelTimeOveheadFactor=1.21
                writeAllModeSkimsForPeakNonPeakPeriodsInterval=0
                writeFullSkimsInterval=0
            }
            "origin_destination_skimmer" {
                fileBaseName=skimsOD
                name=od-skimmer
                writeAllModeSkimsForPeakNonPeakPeriodsInterval=0
                writeFullSkimsInterval=0
            }
            taz-skimmer {
                fileBaseName=skimsTAZ
                geoHierarchy=TAZ
                name=taz-skimmer
            }
            transit-crowding-skimmer {
                fileBaseName=skimsTransitCrowding
                name=transit-crowding-skimmer
            }
            travel-time-skimmer {
                fileBaseName=skimsTravelTimeObservedVsSimulated
                name=travel-time-skimmer
            }
            writeAggregatedSkimsInterval=1
            writeSkimsInterval=1
        }
    }
    routing {
        baseDate="2019-08-12T00:00:00-06:00"
        carRouter=R5
        minimumPossibleSkimBasedTravelTimeInS=60
        overrideNetworkTravelTimesUsingSkims=false
        r5 {
            bikeLaneLinkIdsFilePath=""
            bikeLaneScaleFactor=1.0
            departureWindow=1.0167
            directory="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/r5"
            mNetBuilder {
                fromCRS="epsg:4326"
                toCRS="epsg:26912"
            }
            maxDistanceLimitByModeInMeters {
                bike=40000
            }
            numberOfSamples=1
            osmFile="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/r5/new_network.osm.pbf"
            osmMapdbFile="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/r5/osm.mapdb"
            travelTimeNoiseFraction=0.0
        }
        skimTravelTimesScalingFactor=0.0
        startingIterationForTravelTimesMSA=1
        transitOnStreetNetwork=true
        writeRoutingStatistic=false
    }
    sim {
        metric {
            collector {
                influxDbSimulationMetricCollector {
                    connectionString="http://localhost:8086"
                    database=beam
                }
                metrics="\r\n    beam-run, beam-iteration, beam-map-envelope,\r\n\r\n    beam-run-households, beam-run-population-size, beam-run-private-fleet-size, beam-run-charging-depots-cnt,\r\n    beam-run-charging-depots-stalls-cnt, beam-run-public-fast-charge-cnt, beam-run-public-fast-charge-stalls-cnt,\r\n\r\n    beam-run-RH-ev-cav, beam-run-RH-non-ev-cav, beam-run-RH-ev-non-cav, beam-run-RH-non-ev-non-cav,\r\n\r\n    parking, chargingPower, mode-choices, average-travel-time,\r\n\r\n    ride-hail-waiting-time, ride-hail-waiting-time-map, ride-hail-trip-distance\r\n    "
            }
        }
        termination {
            criterionName=TerminateAtFixedIterationNumber
            terminateAtRideHailFleetStoredElectricityConvergence {
                maxLastIteration=0
                minLastIteration=0
                relativeTolerance=0.01
            }
        }
    }
    spatial {
        boundingBoxBuffer=10000
        localCRS="epsg:26912"
    }
    urbansim {
        backgroundODSkimsCreator {
            calculationTimeoutHours=6
            enabled=false
            maxTravelDistanceInMeters {
                bike=33000
                walk=10000
            }
            modesToBuild {
                drive=true
                transit=true
                walk=true
            }
            numberOfH3Indexes=1000
            routerType=r5
            skimsGeoType=h3
            skimsKind=od
        }
        fractionOfModesToClear {
            allModes=0.0
            bike=0.0
            car=0.0
            "drive_transit"=0.0
            walk=0.0
            "walk_transit"=0.0
        }
    }
    useLocalWorker=true
    warmStart {
        enabled=false
        path="https://s3.us-east-2.amazonaws.com/beam-outputs/run140-base__2018-06-26_22-20-49_28e81b6d.zip"
        prepareData=false
        samplePopulationIntegerFlag=0
        skimsFilePaths=[
            {
                skimType=String
                skimsFilePath=""
            }
        ]
        type=disabled
    }
}
beam-agent-scheduler-pinned-dispatcher {
    executor=thread-pool-executor
    thread-pool-executor {
        allow-core-timeout=off
    }
    type=PinnedDispatcher
}
charging-network-manager-pinned-dispatcher {
    executor=thread-pool-executor
    thread-pool-executor {
        allow-core-timeout=off
    }
    type=PinnedDispatcher
}
config="test/input/csv_test/csv_test.conf"
matsim {
    conversion {
        defaultHouseholdIncome {
            currency=usd
            period=year
            value=50000
        }
        generateVehicles=true
        matsimNetworkFile="Siouxfalls_network_PT.xml"
        osmFile="south-dakota-latest.osm.pbf"
        populationFile="Siouxfalls_population.xml"
        scenarioDirectory="test/intput/siouxfalls"
        shapeConfig {
            shapeFile="tz46_d00.shp"
            tazIdFieldName="TZ46_D00_I"
        }
        vehiclesFile="Siouxfalls_vehicles.xml"
    }
    modules {
        changeMode {
            modes="car,pt"
        }
        controler {
            eventsFileFormat=xml
            firstIteration=0
            lastIteration=1
            mobsim=metasim
            outputDirectory=""
            overwriteFiles=overwriteExistingFiles
        }
        counts {
            averageCountsOverIterations=1
            countsScaleFactor=10.355
            outputformat=""
            writeCountsInterval=0
        }
        global {
            coordinateSystem="epsg:26912"
            randomSeed=1234
        }
        households {
            inputFile="/test/input/beamville/households.xml"
            inputHouseholdAttributesFile="/test/input/beamville/householdAttributes.xml"
        }
        linkStats {
            averageLinkStatsOverIterations=5
            writeLinkStatsInterval=10
        }
        network {
            inputNetworkFile="X:\\RA_Microtransit\\MERGE\\test\\input\\csv_test/r5/physsim-network.xml"
        }
        parallelEventHandling {
            estimatedNumberOfEvents=10000
            numberOfThreads=1
            oneThreadPerHandler=false
            synchronizeOnSimSteps=false
        }
        planCalcScore {
            BrainExpBeta="2.0"
            earlyDeparture="-0"
            lateArrival="-18"
            learningRate="1.0"
            parameterset=[
                {
                    activityType=Home
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="01:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Work
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="9:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Shopping
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="9:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Social
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="4:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Eatout
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="2:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=School
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="8:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Escort
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="00:30:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=University
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="08:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Other
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="02:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=car
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=walk
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=bike
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="ride_hail"
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="drive_transit"
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="walk_transit"
                    monetaryDistanceRate=0
                    type=modeParams
                }
            ]
            performing="6.0"
            traveling="-6.0"
            waiting="-0"
            writeExperiencedPlans=true
        }
        plans {
            inputPersonAttributesFile="/test/input/beamville/populationAttributes.xml"
            inputPlansFile="/test/input/beamville/population.xml"
        }
        qsim {
            endTime="30:00:00"
            snapshotperiod="00:00:00"
            startTime="00:00:00"
        }
        strategy {
            "ModuleProbability_1"=0.7
            "ModuleProbability_2"=0.1
            "ModuleProbability_3"=0.1
            "ModuleProbability_4"=0.1
            "Module_1"=SelectExpBeta
            "Module_2"=ClearRoutes
            "Module_3"=ClearModes
            "Module_4"=TimeMutator
            fractionOfIterationsToDisableInnovation=9999999
            maxAgentPlanMemorySize=4
            parameterset=[
                {
                    disableAfterIteration=-1
                    strategyName=ClearRoutes
                    type=strategysettings
                    weight=0.1
                },
                {
                    disableAfterIteration=-1
                    strategyName=ClearModes
                    type=strategysettings
                    weight=0.1
                },
                {
                    disableAfterIteration=-1
                    strategyName=TimeMutator
                    type=strategysettings
                    weight=0.1
                },
                {
                    disableAfterIteration=-1
                    strategyName=SelectExpBeta
                    type=strategysettings
                    weight=0.7
                }
            ]
        }
        transit {
            transitModes=pt
            useTransit=false
        }
    }
}
my-custom-mailbox {
    mailbox-type="akka.dispatch.UnboundedDequeBasedMailbox"
}
parking-network-manager-pinned-dispatcher {
    executor=thread-pool-executor
    thread-pool-executor {
        allow-core-timeout=off
        core-pool-size-max=64
        keep-alive-time="120s"
    }
    type=PinnedDispatcher
}
ride-hail-manager-pinned-dispatcher {
    executor=thread-pool-executor
    thread-pool-executor {
        allow-core-timeout=off
    }
    type=PinnedDispatcher
}
