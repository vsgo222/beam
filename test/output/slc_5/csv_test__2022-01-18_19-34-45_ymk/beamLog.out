19:34:45.871 [main] INFO  beam.sim.RunBeam$ - 
****************************************************************************************************************************  
** Config File Consistency Check
**  
** Testing your config file against what BEAM is expecting.
**  
** Found the following deprecated parameters, you can safely remove them from your config file:
**  
**  beam.agentsim.startTime
**  beam.replanning.cleanNonCarModesInIteration
**  beam.router.skim.collectFullCarSkimsInterval
**  beam.router.skim.h3Resolution
**  beam.router.skim.origin_destination_skimmer.fileBaseName
**  beam.router.skim.origin_destination_skimmer.name
**  beam.router.skim.origin_destination_skimmer.writeAllModeSkimsForPeakNonPeakPeriodsInterval
**  beam.router.skim.origin_destination_skimmer.writeFullSkimsInterval
**  beam.router.skim.travel-time-skimmer.fileBaseName
**  beam.router.skim.travel-time-skimmer.name
**  beam.warmStart.enabled
**  
** The following parameters were missing from your config file, this is ok, but FYI these default values will be assigned:
**  
**  beam.actorSystemName = [ClusterSystem]
**  beam.agentsim.agents.bodyType = [BODY-TYPE-DEFAULT]
**  beam.agentsim.agents.freight.carrierParkingFilePath = [string]
**  beam.agentsim.agents.freight.carriersFilePath = [/test/input/beamville/freight/freight-carriers.csv]
**  beam.agentsim.agents.freight.enabled = [false]
**  beam.agentsim.agents.freight.name = [Freight]
**  beam.agentsim.agents.freight.plansFilePath = [/test/input/beamville/freight/payload-plans.csv]
**  beam.agentsim.agents.freight.replanning.departureTime = [28800]
**  beam.agentsim.agents.freight.replanning.disableAfterIteration = [-1]
**  beam.agentsim.agents.freight.replanning.strategy = [singleTour]
**  beam.agentsim.agents.freight.toursFilePath = [/test/input/beamville/freight/freight-tours.csv]
**  beam.agentsim.agents.households.inputFilePath = [/test/input/beamville/households.xml.gz]
**  beam.agentsim.agents.households.inputHouseholdAttributesFilePath = [/test/input/beamville/householdAttributes.xml.gz]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.highwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.highwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.highwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.highwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.nonHighwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.nonHighwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.nonHighwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.highCongestion.nonHighwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.highwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.highwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.highwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.highwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.nonHighwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.nonHighwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.nonHighwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.highTimeSensitivity.lowCongestion.nonHighwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lccm.filePath = [/test/input/beamville/lccm-long.csv]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.highwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.highwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.highwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.highwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.nonHighwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.nonHighwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.nonHighwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.highCongestion.nonHighwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.highwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.highwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.highwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.highwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.nonHighwayFactor.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.nonHighwayFactor.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.nonHighwayFactor.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.lowTimeSensitivity.lowCongestion.nonHighwayFactor.LevelLE2 = [1.0]
**  beam.agentsim.agents.modalBehaviors.maximumNumberOfReplanningAttempts = [3]
**  beam.agentsim.agents.modalBehaviors.minimumValueOfTime = [7.25]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.CAV = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.bike = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.drive = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHail = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHailPooled = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHailTransit = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.transit = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.waiting = [1.0]
**  beam.agentsim.agents.modalBehaviors.modeVotMultiplier.walk = [1.0]
**  beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_transit_intercept = [0.0]
**  beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.cav_intercept = [0.0]
**  beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transit_crowding = [0.0]
**  beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transit_crowding_percentile = [90.0]
**  beam.agentsim.agents.modalBehaviors.mulitnomialLogit.utility_scale_factor = [1.0]
**  beam.agentsim.agents.modalBehaviors.poolingMultiplier.Level3 = [1.0]
**  beam.agentsim.agents.modalBehaviors.poolingMultiplier.Level4 = [1.0]
**  beam.agentsim.agents.modalBehaviors.poolingMultiplier.Level5 = [1.0]
**  beam.agentsim.agents.modalBehaviors.poolingMultiplier.LevelLE2 = [1.0]
**  beam.agentsim.agents.modeIncentive.filePath = []
**  beam.agentsim.agents.parking.maxSearchRadius = [8046.72]
**  beam.agentsim.agents.parking.minSearchRadius = [250.00]
**  beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = [-0.086]
**  beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = [1.0]
**  beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = [-0.005]
**  beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = [-0.5]
**  beam.agentsim.agents.parking.rangeAnxietyBuffer = [20000.0]
**  beam.agentsim.agents.plans.inputPersonAttributesFilePath = [/test/input/beamville/populationAttributes.xml.gz]
**  beam.agentsim.agents.plans.inputPlansFilePath = [/test/input/beamville/population.xml.gz]
**  beam.agentsim.agents.plans.merge.fraction = [0.0]
**  beam.agentsim.agents.population.useVehicleSampling = [false]
**  beam.agentsim.agents.ptFare.filePath = []
**  beam.agentsim.agents.rideHail.allocationManager.pooledRideHailIntervalAsMultipleOfSoloRideHail = [1]
**  beam.agentsim.agents.rideHail.cav.noRefuelThresholdInMeters = [96540]
**  beam.agentsim.agents.rideHail.cav.refuelRequiredThresholdInMeters = [16090]
**  beam.agentsim.agents.rideHail.cav.valueOfTime = [1]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.fractionAvailableThresholdToFavorFasterCharging = [1.01]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.chargingTimeMultiplier = [-0.01666667]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.drivingTimeMultiplier = [-0.01666667]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.insufficientRangeMultiplier = [-60.0]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.queueingTimeMultiplier = [-0.01666667]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.noChargingThresholdExpirationTimeInS = [0]
**  beam.agentsim.agents.rideHail.charging.vehicleChargingManager.name = [DefaultVehicleChargingManager]
**  beam.agentsim.agents.rideHail.defaultBaseCost = [1.8]
**  beam.agentsim.agents.rideHail.defaultCostPerMile = [0.91]
**  beam.agentsim.agents.rideHail.defaultCostPerMinute = [0.28]
**  beam.agentsim.agents.rideHail.human.noRefuelThresholdInMeters = [128720]
**  beam.agentsim.agents.rideHail.human.refuelRequiredThresholdInMeters = [32180]
**  beam.agentsim.agents.rideHail.human.valueOfTime = [22.9]
**  beam.agentsim.agents.rideHail.initialization.parking.filePath = []
**  beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = [0.1]
**  beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.home.radiusInMeters = [10000]
**  beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.name = [HOME]
**  beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId = [Car]
**  beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypePrefix = [RH]
**  beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec = [3600.0]
**  beam.agentsim.agents.rideHail.linkFleetStateAcrossIterations = [false]
**  beam.agentsim.agents.rideHail.name = [GlobalRHM]
**  beam.agentsim.agents.rideHail.pooledBaseCost = [1.89]
**  beam.agentsim.agents.rideHail.pooledCostPerMile = [1.11]
**  beam.agentsim.agents.rideHail.pooledCostPerMinute = [0.07]
**  beam.agentsim.agents.rideHail.pooledToRegularRideCostRatio = [0.6]
**  beam.agentsim.agents.rideHail.rangeBufferForDispatchInMeters = [10000]
**  beam.agentsim.agents.rideHail.refuelLocationType = [AtTAZCenter]
**  beam.agentsim.agents.rideHail.refuelThresholdInMeters = [5000.0]
**  beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.fractionOfClosestClustersToConsider = [0.2]
**  beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.horizon = [1200]
**  beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemandForCAVs = [1]
**  beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.predictionHorizon = [3600]
**  beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDemand = [0.4]
**  beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDistance = [0.9]
**  beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters = [5000]
**  beam.agentsim.agents.rideHail.surgePricing.numberOfCategories = [6]
**  beam.agentsim.agents.rideHailTransit.modesToConsider = [MASS]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.activity_file_path = []
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.additional_trip_utility = [0.0]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.destination_nest_scale_factor = [1.0]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.generate_secondary_activities = [false]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.intercept_file_path = []
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_choice_set_size = [20]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_distance_meters = [32000]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.mode_nest_scale_factor = [1.0]
**  beam.agentsim.agents.tripBehaviors.mulitnomialLogit.trip_nest_scale_factor = [1.0]
**  beam.agentsim.agents.vehicles.downsamplingMethod = [SECONDARY_VEHICLES_FIRST]
**  beam.agentsim.agents.vehicles.dummySharedBike.vehicleTypeId = [sharedVehicle-sharedBike]
**  beam.agentsim.agents.vehicles.dummySharedCar.vehicleTypeId = [sharedVehicle-sharedCar]
**  beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = [1.0]
**  beam.agentsim.agents.vehicles.fractionOfPeopleWithBicycle = [1.0]
**  beam.agentsim.agents.vehicles.linkToGradePercentFilePath = []
**  beam.agentsim.agents.vehicles.meanPrivateVehicleStartingSOC = [1.0]
**  beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = [1.0]
**  beam.agentsim.agents.vehicles.transitVehicleTypesByRouteFile = []
**  beam.agentsim.agents.vehicles.vehicleAdjustmentMethod = [UNIFORM]
**  beam.agentsim.chargingNetworkManager.helics.bufferSize = [1000]
**  beam.agentsim.chargingNetworkManager.helics.connectionEnabled = [false]
**  beam.agentsim.chargingNetworkManager.helics.coreInitString = [--federates=1 --broker_address=tcp://127.0.0.1]
**  beam.agentsim.chargingNetworkManager.helics.coreType = [zmq]
**  beam.agentsim.chargingNetworkManager.helics.dataInStreamPoint = [GridFed/PhysicalBounds]
**  beam.agentsim.chargingNetworkManager.helics.dataOutStreamPoint = [PowerDemand]
**  beam.agentsim.chargingNetworkManager.helics.federateName = [CNMFederate]
**  beam.agentsim.chargingNetworkManager.helics.intLogLevel = [1]
**  beam.agentsim.chargingNetworkManager.helics.timeDeltaProperty = [1.0]
**  beam.agentsim.chargingNetworkManager.timeStepInSeconds = [300]
**  beam.agentsim.fractionOfPlansWithSingleActivity = [0.0]
**  beam.agentsim.h3taz.lowerBoundResolution = [6]
**  beam.agentsim.h3taz.upperBoundResolution = [9]
**  beam.agentsim.scenarios.frequencyAdjustmentFile = [/test/input/beamville/r5/FrequencyAdjustment.csv]
**  beam.agentsim.scheduleMonitorTask.initialDelay = [1]
**  beam.agentsim.scheduleMonitorTask.interval = [30]
**  beam.agentsim.taz.parkingCostScalingFactor = [1.0]
**  beam.agentsim.taz.parkingFilePath = []
**  beam.agentsim.taz.parkingManager.displayPerformanceTimings = [false]
**  beam.agentsim.taz.parkingManager.level = [TAZ]
**  beam.agentsim.taz.parkingManager.method = [DEFAULT]
**  beam.agentsim.taz.parkingManager.parallel.numberOfClusters = [8]
**  beam.agentsim.taz.parkingStallCountScalingFactor = [1.0]
**  beam.agentsim.toll.filePath = [/test/input/beamville/toll-prices.csv]
**  beam.agentsim.tuning.fuelCapacityInJoules = [86400000]
**  beam.calibration.counts.inputCountsFile = []
**  beam.calibration.google.travelTimes.enable = [false]
**  beam.calibration.google.travelTimes.iterationInterval = [5]
**  beam.calibration.google.travelTimes.minDistanceInMeters = [5000]
**  beam.calibration.google.travelTimes.numDataPointsOver24Hours = [100]
**  beam.calibration.google.travelTimes.offPeakEnabled = [false]
**  beam.calibration.google.travelTimes.queryDate = [2020-10-14]
**  beam.calibration.google.travelTimes.tolls = [true]
**  beam.calibration.meanToCountsWeightRatio = [0.5]
**  beam.calibration.roadNetwork.travelTimes.zoneBoundariesFilePath = []
**  beam.calibration.roadNetwork.travelTimes.zoneODTravelTimesFilePath = []
**  beam.calibration.studyArea.enabled = [false]
**  beam.calibration.studyArea.lat = [0]
**  beam.calibration.studyArea.lon = [0]
**  beam.calibration.studyArea.radius = [0]
**  beam.cluster.clusterType = []
**  beam.cluster.enabled = [false]
**  beam.debug.agentTripScoresInterval = [0]
**  beam.debug.clearRoutedOutstandingWorkEnabled = [false]
**  beam.debug.memoryConsumptionDisplayTimeoutInSec = [0]
**  beam.debug.messageLogging = [false]
**  beam.debug.secondsToWaitToClearRoutedOutstandingWork = [60]
**  beam.debug.triggerMeasurer.enabled = [false]
**  beam.debug.triggerMeasurer.writeStuckAgentDetectionConfig = [true]
**  beam.debug.vmInformation.createGCClassHistogram = [false]
**  beam.debug.writeModeChoiceAlternatives = [false]
**  beam.debug.writeRealizedModeChoiceFile = [false]
**  beam.exchange.output.activitySimSkimsEnabled = [false]
**  beam.exchange.output.geo.filePath = [string]
**  beam.exchange.scenario.urbansim.activitySimEnabled = [false]
**  beam.experimental.optimizer.enabled = [false]
**  beam.input.lastBaseOutputDir = [output]
**  beam.input.simulationPrefix = [beamville]
**  beam.logger.keepConsoleAppenderOn = [true]
**  beam.outputs.collectAndCreateBeamAnalysisAndGraphs = [true]
**  beam.outputs.displayPerformanceTimings = [false]
**  beam.outputs.generalizedLinkStats.endTime = [32400]
**  beam.outputs.generalizedLinkStats.startTime = [25200]
**  beam.outputs.generalizedLinkStatsInterval = [0]
**  beam.outputs.matsim.deleteITERSFolderFiles = []
**  beam.outputs.matsim.deleteRootFolderFiles = []
**  beam.outputs.writeGraphs = [true]
**  beam.outputs.writeR5RoutesInterval = [0]
**  beam.physsim.bprsim.inFlowAggregationTimeWindowInSeconds = [900]
**  beam.physsim.bprsim.minFlowToUseBPRFunction = [0]
**  beam.physsim.bprsim.travelTimeFunction = [BPR]
**  beam.physsim.cchRoutingAssignment.congestionFactor = [1.0]
**  beam.physsim.duplicatePTE.departureTimeShiftMax = [600]
**  beam.physsim.duplicatePTE.departureTimeShiftMin = [-600]
**  beam.physsim.duplicatePTE.fractionOfEventsToDuplicate = [0.0]
**  beam.physsim.eventManager.numberOfThreads = [1]
**  beam.physsim.eventManager.type = [Auto]
**  beam.physsim.initializeRouterWithFreeFlowTimes = [true]
**  beam.physsim.jdeqsim.cacc.adjustedMinimumRoadSpeedInMetersPerSecond = [1.3]
**  beam.physsim.jdeqsim.cacc.capacityPlansWriteInterval = [0]
**  beam.physsim.linkStatsBinSize = [3600]
**  beam.physsim.name = [JDEQSim]
**  beam.physsim.network.maxSpeedInference.enabled = [false]
**  beam.physsim.network.maxSpeedInference.type = [MEAN]
**  beam.physsim.network.overwriteRoadTypeProperties.enabled = [false]
**  beam.physsim.network.overwriteRoadTypeProperties.livingStreet.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.livingStreet.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.livingStreet.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.minor.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.minor.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.minor.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorway.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorway.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorway.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorwayLink.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorwayLink.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.motorwayLink.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.primary.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.primary.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.primary.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.primaryLink.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.primaryLink.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.primaryLink.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.residential.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.residential.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.residential.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondary.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondary.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondary.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondaryLink.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondaryLink.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.secondaryLink.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiary.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiary.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiary.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiaryLink.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiaryLink.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.tertiaryLink.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunk.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunk.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunk.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunkLink.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunkLink.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.trunkLink.speed = [double?]
**  beam.physsim.network.overwriteRoadTypeProperties.unclassified.capacity = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.unclassified.lanes = [int?]
**  beam.physsim.network.overwriteRoadTypeProperties.unclassified.speed = [double?]
**  beam.physsim.overwriteLinkParamPath = []
**  beam.physsim.parbprsim.numberOfClusters = [8]
**  beam.physsim.parbprsim.syncInterval = [60]
**  beam.physsim.pickUpDropOffAnalysis.additionalTravelTimeMultiplier = [1.0]
**  beam.physsim.pickUpDropOffAnalysis.enabled = [false]
**  beam.physsim.pickUpDropOffAnalysis.secondsFromPickUpPropOffToAffectTravelTime = [600]
**  beam.physsim.relaxation.experiment2_0.clearModesEveryIteration = [true]
**  beam.physsim.relaxation.experiment2_0.clearRoutesEveryIteration = [true]
**  beam.physsim.relaxation.experiment2_0.fractionOfPopulationToReroute = [0.1]
**  beam.physsim.relaxation.experiment2_0.internalNumberOfIterations = [15]
**  beam.physsim.relaxation.experiment2_1.clearModesEveryIteration = [true]
**  beam.physsim.relaxation.experiment2_1.clearRoutesEveryIteration = [true]
**  beam.physsim.relaxation.experiment2_1.fractionOfPopulationToReroute = [0.1]
**  beam.physsim.relaxation.experiment2_1.internalNumberOfIterations = [15]
**  beam.physsim.relaxation.experiment3_0.fractionOfPopulationToReroute = [0.1]
**  beam.physsim.relaxation.experiment3_0.internalNumberOfIterations = [15]
**  beam.physsim.relaxation.experiment4_0.percentToSimulate = [[double]]
**  beam.physsim.relaxation.experiment5_0.percentToSimulate = [[double]]
**  beam.physsim.relaxation.experiment5_1.percentToSimulate = [[double]]
**  beam.physsim.relaxation.experiment5_2.percentToSimulate = [[double]]
**  beam.physsim.relaxation.type = [normal]
**  beam.physsim.speedScalingFactor = [1.0]
**  beam.physsim.writeRouteHistoryInterval = [10]
**  beam.replanning.clearModes.iteration = [0]
**  beam.replanning.clearModes.modes = [[string]]
**  beam.replanning.clearModes.strategy = [AtBeginningOfIteration]
**  beam.router.skim.activity-sim-skimmer.fileBaseName = [activitySimODSkims]
**  beam.router.skim.activity-sim-skimmer.name = [activity-sim-skimmer]
**  beam.router.skim.drive-time-skimmer.fileBaseName = [skimsTravelTimeObservedVsSimulated]
**  beam.router.skim.drive-time-skimmer.name = [drive-time-skimmer]
**  beam.router.skim.origin-destination-skimmer.fileBaseName = [skimsOD]
**  beam.router.skim.origin-destination-skimmer.name = [od-skimmer]
**  beam.router.skim.origin-destination-skimmer.poolingTravelTimeOveheadFactor = [1.21]
**  beam.router.skim.origin-destination-skimmer.writeAllModeSkimsForPeakNonPeakPeriodsInterval = [0]
**  beam.router.skim.origin-destination-skimmer.writeFullSkimsInterval = [0]
**  beam.router.skim.taz-skimmer.geoHierarchy = [TAZ]
**  beam.router.skim.transit-crowding-skimmer.fileBaseName = [skimsTransitCrowding]
**  beam.router.skim.transit-crowding-skimmer.name = [transit-crowding-skimmer]
**  beam.routing.carRouter = [R5]
**  beam.routing.minimumPossibleSkimBasedTravelTimeInS = [60]
**  beam.routing.overrideNetworkTravelTimesUsingSkims = [false]
**  beam.routing.r5.bikeLaneLinkIdsFilePath = []
**  beam.routing.r5.bikeLaneScaleFactor = [1.0]
**  beam.routing.r5.maxDistanceLimitByModeInMeters.bike = [40000]
**  beam.routing.r5.numberOfSamples = [1]
**  beam.routing.r5.travelTimeNoiseFraction = [0.0]
**  beam.routing.skimTravelTimesScalingFactor = [0.0]
**  beam.routing.writeRoutingStatistic = [false]
**  beam.sim.termination.criterionName = [TerminateAtFixedIterationNumber]
**  beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.maxLastIteration = [0]
**  beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.minLastIteration = [0]
**  beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.relativeTolerance = [0.01]
**  beam.urbansim.backgroundODSkimsCreator.calculationTimeoutHours = [6]
**  beam.urbansim.backgroundODSkimsCreator.enabled = [false]
**  beam.urbansim.backgroundODSkimsCreator.maxTravelDistanceInMeters.bike = [33000]
**  beam.urbansim.backgroundODSkimsCreator.maxTravelDistanceInMeters.walk = [10000]
**  beam.urbansim.backgroundODSkimsCreator.modesToBuild.drive = [true]
**  beam.urbansim.backgroundODSkimsCreator.modesToBuild.transit = [true]
**  beam.urbansim.backgroundODSkimsCreator.modesToBuild.walk = [true]
**  beam.urbansim.backgroundODSkimsCreator.numberOfH3Indexes = [1000]
**  beam.urbansim.backgroundODSkimsCreator.peakHours = [[double]]
**  beam.urbansim.backgroundODSkimsCreator.routerType = [r5]
**  beam.urbansim.backgroundODSkimsCreator.skimsGeoType = [h3]
**  beam.urbansim.backgroundODSkimsCreator.skimsKind = [od]
**  beam.urbansim.fractionOfModesToClear.allModes = [0.0]
**  beam.urbansim.fractionOfModesToClear.bike = [0.0]
**  beam.urbansim.fractionOfModesToClear.car = [0.0]
**  beam.urbansim.fractionOfModesToClear.drive_transit = [0.0]
**  beam.urbansim.fractionOfModesToClear.walk = [0.0]
**  beam.urbansim.fractionOfModesToClear.walk_transit = [0.0]
**  beam.useLocalWorker = [true]
**  beam.warmStart.prepareData = [false]
**  beam.warmStart.samplePopulationIntegerFlag = [0]
**  beam.warmStart.skimsFilePaths = [[{skimType=String, skimsFilePath=}]]
**  beam.warmStart.type = [disabled]
**  matsim.modules.counts.inputCountsFile = []
**  matsim.modules.households.inputFile = [/test/input/beamville/households.xml]
**  matsim.modules.households.inputHouseholdAttributesFile = [/test/input/beamville/householdAttributes.xml]
**  matsim.modules.plans.inputPersonAttributesFile = [/test/input/beamville/populationAttributes.xml]
**  matsim.modules.plans.inputPlansFile = [/test/input/beamville/population.xml]
**  matsim.modules.strategy.planSelectorForRemoval = [WorstPlanForRemovalSelector]
**  matsim.modules.transit.vehiclesFile = []
**  matsim.modules.vehicles.vehiclesFile = []
**************************************************************************************************************************

19:34:45.951 [main] ERROR beam.sim.RunBeam$ - Input consistency check failed:
beam.agentsim.agents.vehicles.dummySharedCar.vehicleTypeId 'sharedVehicle-sharedCar' is not in vehicleTypes [BUS-VTA,TRAIN-CE,BUS-WC,FERRY-DEFAULT,BUS-DE,BODY-TYPE-DEFAULT,BUS-CM,BUS-FS,WAV,CAR,TRAM-DEFAULT,BUS-MA,CAV,BUS-VN,BUS-DEFAULT,BUS-GG,Car-rh-only,BUS-SO,BUS-CT,BUS-CC,PHEV,BUS-MS,BUS-ST,TRAIN-CT,BEV,BUS-AC,CABLE_CAR-DEFAULT,micro,BUS-SM,CABLE_CAR-SF,FAST-BIKE,BUS-WH,BIKE-DEFAULT,BUS-SF,SUBWAY-DEFAULT,slc_testCar,BUS-RV,RAIL-DEFAULT,BUS-AY,FERRY-HF,BUS-VC,BUS-SR,TRAM-SF,BUS-PE,SUBWAY-BA,Car,RAIL-AM]
19:34:46.062 [main] INFO  beam.sim.RunBeam$ - Starting beam on branch csv_input at commit 2d28401753e1e3e6b9dd6a756ac7a1a9afef5209.
19:34:46.064 [main] INFO  beam.sim.RunBeam$ - Maximum Memory (-Xmx): 3.8 (GB)
19:34:46.105 [main] INFO  beam.sim.RunBeam$ - Processing configs for [csv_test] simulation.
19:34:46.109 [main] INFO  beam.sim.RunBeam$ - Config 'test\input\csv_test\csv_test.conf' copied to 'X:\RA_Microtransit\MERGE\test\input\csv_test\..\..\output\slc_5\csv_test__2022-01-18_19-34-45_ymk\beam.conf'.
19:34:46.161 [main] INFO  beam.sim.RunBeam$ - Config 'test\input\common\metrics.conf' copied to 'X:\RA_Microtransit\MERGE\test\input\csv_test\..\..\output\slc_5\csv_test__2022-01-18_19-34-45_ymk\metrics.conf'.
19:34:46.162 [main] INFO  beam.sim.RunBeam$ - Config 'test\input\common\akka.conf' copied to 'X:\RA_Microtransit\MERGE\test\input\csv_test\..\..\output\slc_5\csv_test__2022-01-18_19-34-45_ymk\akka.conf'.
19:34:46.162 [main] INFO  beam.sim.RunBeam$ - Config 'test\input\common\matsim.conf' copied to 'X:\RA_Microtransit\MERGE\test\input\csv_test\..\..\output\slc_5\csv_test__2022-01-18_19-34-45_ymk\matsim.conf'.
19:34:47.861 [main] INFO  b.r.r5.DefaultNetworkCoordinator - Initializing router by reading network from: X:\RA_Microtransit\MERGE\test\input\csv_test\r5\network.dat
19:34:57.153 [main] INFO  hsqldb.db.HSQLDB4AD417742A.ENGINE - dataFileCache open start
19:34:59.373 [main] INFO  b.agentsim.infrastructure.taz.H3TAZ - fillBox for boundingBox QuadTreeBounds(-112.36469770000065,39.77329009999992,-111.48579299999999,41.5921450999999) with resolution 6 executed in 17 ms
19:34:59.373 [main] INFO  b.agentsim.infrastructure.taz.H3TAZ - fillBox for boundingBox QuadTreeBounds(-112.36469770000065,39.77329009999992,-111.48579299999999,41.5921450999999) with resolution 6 gives 389 elemets
19:34:59.529 [main] INFO  b.agentsim.infrastructure.taz.H3TAZ - Constructed tazToH3TAZMapping executed in 155 ms
19:34:59.809 [main] INFO  b.u.s.u.censusblock.UrbansimReaderV2 - Start reading of households info...
19:34:59.818 [main] INFO  b.u.s.u.censusblock.UrbansimReaderV2 - Households info has been read successfully.
